name: Build Installer

on:
  push:
    branches: 
      - main
      - 'release-*'
      - 'beta-release-*'

env:
  BUILD_CONFIG: "Release"
  BUILDNUMBER: ${{github.run_number}}

jobs:
  build:
    name: Build the Ziti Desktop Edge for Windows Installer Package
    runs-on: windows-latest
    # if: "!contains(github.event.head_commit.message, 'ci skip')"
    env:
      SIGNING_CERT: ${{ secrets.SIGNING_CERT_2022_b64 }}
      ADV_INST_KEY: ${{ secrets.ADV_INST_KEY }}
      JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
      gh_ci_key: ${{ secrets.GH_CI_KEY }}
      ZITI_DEBUG: "yes_please"
      OPENZITI_P12_PASS: ${{ secrets.OPENZITI_P12_PASS }}
      OPENZITI_P12: ${{ secrets.OPENZITI_P12 }}

    steps:
      - uses: actions/checkout@master
      - uses: microsoft/setup-msbuild@v1
      - name: Set up Go 
        uses: actions/setup-go@v3
      #- name: Install Ziti CI
      #  uses: netfoundry/ziti-ci@v1
      - if: github.event_name == 'push'
        run: echo "GIT_BRANCH=$($env:GITHUB_REF.replace('refs/heads/', ''))" >> $env:GITHUB_ENV
      - if: github.event_name == 'pull_request'
        run: echo "GIT_BRANCH=$env:GITHUB_HEAD_REF" >> $env:GITHUB_ENV
      - name: Setup secrets
        run: |
          echo "${env:SIGNING_CERT}" > WinSign.b64
          echo "${env:ADV_INST_KEY}" > ADV_INST_KEY.key
          echo "${env:OPENZITI_P12}" > OPENZITI_P12.b64
          C:\Windows\System32\certutil.exe -decode WinSign.b64 Installer/WinSign.p12
          C:\Windows\System32\certutil.exe -decode OPENZITI_P12.b64 Installer/openziti.p12
      - name: Trying to run choco install.
        run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      - name: "Install Choco needs: advanced-installer wixtoolset ninja"
        run: choco install advanced-installer wixtoolset ninja --yes
      - name: "Install Choco needs: Node JS"
        run: choco install -y --force nodejs
      - name: Build the ziti-edge-tunnel (for now, will download later)
        run: ziti-edge-tunnel\build.bat quick
      - name: Setting up version env var
        run: echo "VERSION=$(cat .\version)" >> $env:GITHUB_ENV
      - name: Upload service zip onto job
        uses: actions/upload-artifact@v2
        with:
          name: ziti-edge-tunnel-win.zip-${{ env.VERSION }}
          path: "ziti-edge-tunnel/ziti-edge-tunnel-win.zip"
      - name: Setting up ZITI_EDGE_TUNNEL_BUILD env var
        run: echo "ZITI_EDGE_TUNNEL_BUILD=.\ziti-edge-tunnel" >> $env:GITHUB_ENV
      - uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NuGetAPIKey }}
          nuget-version: '5.8.1'
      - name: Restore nuget packages
        run: nuget restore ZitiDesktopEdge.sln
      - shell: pwsh
        name: Register Advanced Installer
        run: |
          $key=(Get-Content .\ADV_INST_KEY.key)
          .\Installer\reg.bat $key
      - name: Build UI and Assemble Installer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ziti_ci_gpg_key: ${{ secrets.ZITI_CI_GPG_KEY }}
          ziti_ci_gpg_key_id: ${{ secrets.ZITI_CI_GPG_KEY_ID }}
        run: powershell -File .\Installer\build.ps1
      - name: Upload installer onto job
        uses: actions/upload-artifact@v2
        with:
          name: ZitiDesktopEdgeClient-${{ env.VERSION }}
          path: "Installer/Output/Ziti Desktop Edge Client-*"
      - name: Git Status
        run: git status
      - name: git diff
        run: git diff DesktopEdge/Properties/AssemblyInfo.cs ZitiDesktopEdge.Client/Properties/AssemblyInfo.cs ZitiUpdateService/Properties/AssemblyInfo.cs Installer/ZitiDesktopEdge.aip
      - if: github.ref == 'refs/heads/release-next'
        uses: EndBug/add-and-commit@v9
        with:
          add: 'DesktopEdge/Properties/AssemblyInfo.cs ZitiDesktopEdge.Client/Properties/AssemblyInfo.cs ZitiUpdateService/Properties/AssemblyInfo.cs Installer/ZitiDesktopEdge.aip'
          default_author: github_actions
          committer_name: ziti-ci
  linux-build: 
    name: Build the Ziti Desktop Edge for Linux Deb & Rpm Installer Package
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ziti-edge-ui
    steps: 
      - uses: actions/checkout@v3
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '16.15.0'
      - uses: pCYSl5EDgo/cat@1.0.1
        id: vars
        with:
          path: ./version
      - run: echo ${{ steps.vars.outputs.text }}
        env:
          APPVER: ${{ steps.vars.outputs.text }}
      - name: Show Version
        run: echo $APPVER
      - run: npm install
      - run: npm i -g electron-builder
      - run: electron-builder --linux deb rpm
      - name: Upload Linux Deb installer
        uses: actions/upload-artifact@v2
        with:
          name: ZitiDesktopEdge-Deb-${{ steps.vars.outputs.text }}
          path: "dist/ziti-desktop-edge-${{ steps.vars.outputs.text }}.deb"
      - name: Upload Linux Rpm installer
        uses: actions/upload-artifact@v2
        with:
          name: ZitiDesktopEdge-Rpm-${{ steps.vars.outputs.text }}
          path: "dist/ziti-desktop-edge-${{ steps.vars.outputs.text }}.rpm"